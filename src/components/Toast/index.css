body {
  margin: 0;
  font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen', 'Ubuntu',
    'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

:root {
  --success: #5cb85c;
  --warning: #f0ad4e;
  --danger: #d9534f;
  --info: #5bc0de;
}

.toast {
  background: var(--success);
  color: white;
  min-height: 40px;
  padding: 16px 16px;
  position: fixed;
  border-radius: 3px;
  box-shadow: 0px 0px 4px 0px #00000059;
  display: flex;
  cursor: pointer;
  margin: 0;
  font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen', 'Ubuntu',
    'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.toast.toast__success {
  background-color: var(--success);
}
.toast.toast__info {
  background-color: var(--info);
}
.toast.toast__warning {
  background-color: var(--warning);
}
.toast.toast__error {
  background-color: var(--danger);
}
.toast .toast__image {
  align-items: center;
  justify-content: center;
  display: flex;
  margin-right: 16px;
}
.toast .toast__title {
  font-weight: 600;
  display: block;
  line-height: 1.4;
}
.toast .toast__content {
  font-weight: 400;
  display: block;
}
.toast .toast__close {
  margin-left: 24px;
  font-weight: 600;
  cursor: pointer;
}

.toast.toast__top_right {
  right: 12px;
  top: 12px;
  animation: toast-right 0.6s;
}

.toast.toast__bottom_right {
  right: 12px;
  bottom: 12px;
  animation: toast-right 0.6s;
}

.toast.toast__top_left {
  left: 12px;
  bottom: 12px;
  animation: toast-left 0.6s;
}

.toast.toast__bottom_left {
  right: 12px;
  bottom: 12px;
  animation: toast-left 0.6s;
}

@keyframes toast-right {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes toast-left {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}
